[
  {
    "objectID": "04-how-to-modify.html",
    "href": "04-how-to-modify.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "Start modifying the files in one of the template title pages. Currently this is vline and bg-image.\n\n\n\nNo way! I have a static title page and I want to use that.\nGo to one of the static examples (end in -static) and modify there.\nWhat’s the difference? They both are being listed in template-partials in the YAML. -static is using a static title page. It is not using the values from the YAML at all. However before-body.tex still needs to be listed in template-partials to override the template that Quarto (and Pandoc) uses.\n\n\n\n\nDefines titlepage or frontmatter via a pandoc template in before-body.tex.\nPasses that template in via template-partials. This is needed so that you can reference the YAML variables, things like author.\nSpecifies the extra things (packages) that are needed for the LaTeX header in in-header.tex.\n\n\n\n\nformat:\n  pdf:\n    documentclass: scrartcl \n    number-sections: true\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\n    toc: true\n    lof: true\n    lot: true\n\n\n\nLaTeX document class affects the look; scrartcl or srcbook are the Quarto defaults. The cls folder in the repo has a few more in it.\n    documentclass: scrartcl\nArticles generally don’t have # (header 1) but instead just use ## (header 2). If you use, # (header 1) in scrartcl, then you need to set\n    number-sections: true \nso the numbering isn’t whack.\nThis is the custom title page stuff. You don’t need to have the .tex files in the base directory. Often these files are stored in a tex or partials directory. If you do that, add the directory to the file, e.g. partials/before-body.tex.\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\nNext bit indicates if you want table of contents (toc), list of fig (lof), or list of tables (lot).\n    toc: true\n    lof: true\n    lot: true"
  },
  {
    "objectID": "05-pandoc-templates.html",
    "href": "05-pandoc-templates.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "The files that appear in the template-partials: line of the YAML are Pandoc Templates with LaTeX Pandoc templating \n$-- is a Pandoc comment % is a LaTeX comment\n\n\nTo comment out a line in a pandoc template, use $--.\n$-- this is a comment\n\n\n\n$if(subtitle)$ ... $endif$\nHere subtitle is true if the YAML has “subtitle:” and false otherwise\n$subtitle$ (with $..$) is the value of subtitle in the YAML\n$if(subtitle)${\\large\\textit{$subtitle$}}$endif$ \nprints the subtitle in large text. \\large is LaTeX\n$if(by-author/allbutlast)$ means if there is more than one author since if there is only one author then there is no “allbutlast” value\n$if(by-author/last)$ tests if there is a last author. If there is at least one author, this will be true.\n\n\n\nThe basic syntax is $for(mylist)$ ... $sep$ ... $endfor$ where the value after $sep$ specifies what separates each value in the list. Let’s say in your yaml, you have mylist: [\"one\", \"two\", \"three\"].\n$for(mylist)${\\large{$mylist$}}$sep$ AND $endfor$%\nWould put one AND two AND three in your tex file.\nAuthors and affiliations The Quarto author filter sets up lists of the unique authors and affiliations that you can use. See the title.tex and before-body.tex examples in https://github.com/quarto-journals.\n$for(by-author)$%\n{\\large{$by-author.name.literal$}}$sep${\\large{ AND }}\n$endfor$%\nThis is a for loop across all the authors and prints each author name. The $sep$ bit says what to put between the names. In this case it would be AND. So Jane Doe AND Ashkar Kumar\n\n\n\nYou can include other files in your template partials. Let’s say you have a file called _titlepage.tex. You can include it in another template by putting () after the name of the file:\n$_titlepage.tex()$\nMake sure to list the file in your yaml. The _ in front of the name is just to help you make sure you don’t accidentally use one of Pandoc’s reserved names (like title.tex).\nformat:\n  pdf:\n    documentclass: scrartcl \n    number-sections: true\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n\n\n\nThe Pandoc template can number the author affiliations and will figure the duplicates.\n$for(by-author)$%\n{\\large{$by-author.name.literal$}}%\n$for(by-author.affiliations)$%\n{\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}%\n$endfor$%\n$sep$, %\n$endfor$\nThis is assigning a number to each affiliation name and then adds it as a superscript to the author name. It will figure out the duplicates."
  },
  {
    "objectID": "02-how-it-works.html",
    "href": "02-how-it-works.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "For LaTeX users\nPandoc has a template that it uses to create the LaTeX document. Certain key parts of the template are specified with files (template partials) with the code for that section. For our purposes, the key template partials are title.tex and before-body.tex.\n\\documentclass[<<<classoption>>>]{<<<document class>>>}\n\n<<<include-in-header static>>>\n\n<<<title.tex template>>>\n\n\\begin{document}\n\n<<<before-body.tex template>>>\n\nALL YOUR CONTENT\n\n\\end{document}\nThe title.tex template is defining things like \\author and before-body.tex is calling \\maketitle. When you pass in before-body.tex in template-partials: in your document YAML, it replaces the default one.\nThus by passing in title.tex or before-body.tex, you replace the title page specification by you own specification.\n\n\ntemplate versus static A template mixes Pandoc templating code with LaTeX and allows you to use variables from the YAML in our file. Static must have plain LaTeX. Note a template file can be plain LaTeX too, if you want.\nspecial template files There are some template files that are special because Pandoc uses files of the same name to input code in the same places. For our purposes, we need to know about before-body.tex and title.tex.\n\n\n\n\nPass in title.tex with the \\author and \\affil specified how you want. You will probably want to redefine \\maketitle. Search google for how to do that. It is a standard way to customize the title page. That’s all you need to do. The title page will be created with \\maketitle which is in the default before-body.tex.\nDitch \\maketitle and create your own title page using \\begin{titlepage}....\\end{titlepage}. In this case, you will pass in before-body.tex. You don’t need to specify title.tex; that LaTeX code is only used for \\maketitle and you won’t have that in your new before-body.tex. This is the approach used by quarto-titlepages.\n\n\n\n\nYou can open up the repo on RStudio Cloud. Log in with an account or with Google if you don’t want to create an account.\nStart with a static title page by going to titlepages/vline-static.\n\nOpen up article.qmd and click Render. Or open a shell and type\n\nquarto render titlepages/vline-static/article.qmd\n\nOpen before-body.tex to see what it is doing.\nOpen _titlepage.tex to see the code that defines the title page.\n\n\n\n\nGo to the chapter on How to modify."
  },
  {
    "objectID": "08-acknowledgements.html",
    "href": "08-acknowledgements.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "quarto-cli: Allaire, J., Teague, C., Scheidegger, C., Xie, Y., & Dervieux, C. (2022). Quarto (Version 0.3) [Computer software]. https://doi.org/10.5281/zenodo.5960048\nQuarto manual\n\n\n\n\n\n\nvline: Based off vline-static (see below). Coverted to Pandoc template and further modified by EE Holmes (eli.holmes@noaa.gov)\nbg-image: EE Holmes (eli.holmes@noaa.gov)\ngreat-wave: This template is based on a post by Arun Debray to tex.stackoverflow: https://tex.stackexchange.com/posts/554962/revisions. Coverted to Pandoc template and further modified by EE Holmes (eli.holmes@noaa.gov)\n\n\n\n\n\nvline-static: Downloaded from http://www.LaTeXTemplates.com. Original author: Peter Wilson (herries.press@earthlink.net) with modifications by Vel (vel@latextemplates.com)\nclassic-lined-static: Downloaded from http://www.LaTeXTemplates.com. Original author: WikiBooks (LaTeX - Title Creation) with modifications by Vel (vel@latextemplates.com)\nacademic-static: Downloaded from http://www.LaTeXTemplates.com. Original author: Peter Wilson (herries.press@earthlink.net) with modifications by Vel (vel@latextemplates.com)\nmulti-purpose-static: Downloaded from http://www.LaTeXTemplates.com. Original author: WikiBooks (LaTeX - Title Creation) with modifications by Vel (vel@latextemplates.com)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "quarto titlepages v1 is a collection of Pandoc template partials (Pandoc template + LaTeX) and LaTeX header files to create custom title pages for PDF. This is not the quarto_titlepages Quarto Extension; that lives here.\nquarto_titlepages_v1 is for LaTeX users who want to DYI their own titlepages, either with a dynamic Pandoc template or with a static titlepage. This does not require installation of anything. Download (or copy) the before-body.tex, _titlepage.tex, and in-header.tex files for one of the title pages and add them to the pdf format portion of your YAML. See How to use\nThere are two types of title pages. Static does not use the YAML. Modify these if you have a title page written in LaTeX that you want to use. The template title pages (no -static at end) will use the YAML variables (authors, affiliations, cover image, etc).\n\ngreat-wavevlinebg-imageacademic-staticclassic-lined-staticmulti-purpose-staticthesis-staticthesis2-static\n\n\nTemplate with a book cover. Double-click on image to see PDF \n\n\nDouble-click to see demo PDF in scrbook scrartcl krantz svmono elsarticle \n\n\nDouble-click on image to see PDF \n\n\nDouble-click on image to see PDF \n\n\nDouble-click on image to see PDF \n\n\nDouble-click on image to see PDF \n\n\nDouble-click on image to see PDF \n\n\nDouble-click on image to see PDF"
  },
  {
    "objectID": "02-titlepages.html",
    "href": "02-titlepages.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "The YAML This appears at the top of article.qmd for a single qmd or index.qmd for a Quarto book project (multiple qmd for a book). This just shows the PDF format specification.\n\n\n\n\nFor scrartcl use number-sections: true so the section numbers aren’t messed up.\nformat:\n  pdf:\n    documentclass: scrartcl\n    number-sections: true\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\n    toc: true\n    lof: true\n    lot: true\nFor scrbook document class, these class options will make the page margins the same on even and odd pages and allow chapters and parts to start on either even or odd pages.\n    documentclass: scrbook\n    classoption: [\"oneside\", \"open=any\"]\n\n\n\nNothing special.\n$if(has-frontmatter)$\n  \\begin{frontmatter}\n  \\begin{titlepage}\n  $_titlepage.tex()$\n  \\end{titlepage}\n  \\end{frontmatter}\n$else$\n  \\begin{titlepage}\n  $_titlepage.tex()$\n  \\end{titlepage}\n$endif$\n\n  \n\n\n\n\n\n\nNothing special. I use babel to allow the Czech diacritics.\n\\newcommand*{\\plogo}{\\fbox{$\\mathcal{PL}$}} % Generic dummy publisher logo\n\\usepackage[utf8]{inputenc} % Required for inputting international characters\n\\usepackage[T1]{fontenc} % Output font encoding for international characters\n\\usepackage{hyphenat}\n%\\usepackage{ifthen} % needed for the if statements in before-body.tex\n\\usepackage{graphicx}\n\n\n\n\n\n\n\n\n\n\n\n\nHere is where all the work is done.\n% This is a combination of Pandoc templating and LaTeX\n% Pandoc templating https://pandoc.org/MANUAL.html#templates\n% See the README for help\n\n\\raggedleft % left align the title page\n\\rule{1pt}{\\textheight} % Vertical line\n\\hspace{0.05\\textwidth} % Whitespace between the vertical line and title page text\n% Adjust num before \\textwidth to move the block left or right\n\\begin{minipage}[b][\\textheight][s]{0.85\\textwidth}\n\n\\raggedright\n% Title and subtitle\n{\\large\\bfseries\\nohyphens{$title$}}\\\\[2\\baselineskip] \n$if(subtitle)${\\large\\textit{$subtitle$}}\\\\[4\\baselineskip]$endif$\n    \n% Authors   \n% This hairy bit of code is just to get \"and\" between the last 2\n% authors. See below if you don't need that\n$if(by-author/allbutlast)$\n$for(by-author/allbutlast)$\n {\\large{$by-author.name.literal$}}$for(by-author.affiliations)${\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{*}}%\n$endif$%\n$sep$, \n$endfor$\n$for(by-author/last)$%\n{ and \\large{$by-author.name.literal$}}%\n$for(by-author.affiliations)${\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}%\n$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{*}}%\n$endif$%\n$endfor$\n$else$\n$for(by-author/last)$%\n{\\large{$by-author.name.literal$}}%\n$for(by-author.affiliations)$%\n{\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{,*}}%\n$endif$%\n$endfor$\n$endif$\n\n% This is how to do it if you don't need the \"and\"\n$if(false)$%\n$for(by-author)$%\n{$by-author.name.literal$}%\n$for(by-author.affiliations)$%\n{\\textsuperscript{$it.number$}}$sep${\\textsuperscript{,}}%\n$endfor$%\n$if(by-author.email)$,{\\textsuperscript{*}}%\n$endif$%\n$sep$, %\n$endfor$%\n$endif$\n\n%%%%%% Affiliations\n\\vspace{2\\baselineskip} \n\n\\hangindent=1em\n\\hangafter=1\n$for(by-affiliation)$%\n{$it.number$}.~$if(by-affiliation.name)${$it.name$}$endif$%\n$if(by-affiliation.department)$%\n$if(by-affiliation.name)$, $endif$%\n{$it.department$}%\n$endif$%\n$if(by-affiliation.address)$%\n$if(by-affiliation.name)$, $else$$if(by-affiliation.department)$, $endif$$endif$%\n{$it.address$}%\n$endif$%\n$sep$\\par\\hangindent=1em\\hangafter=1%\n$endfor$\n\n%%%%%% Correspondence\n\\vspace{1\\baselineskip} \n\n$for(by-author)$\n$if(by-author.email)$\n* \\textit{Correspondence:}~$by-author.name.literal$~$by-author.email$\n$endif$\n$endfor$\n\n%use \\vfill instead to get the space to fill flexibly   \n%\\vspace{0.25\\textheight} % Whitespace between the title block and the publisher\n\n\\vfill\n\n%%%%%% Cover image\n$if(cover)$\\includegraphics[width=4cm]{$cover$}$endif$\n\n% Whitespace between the title block and the tagline\n\\vspace{0.1\\textheight} \n\n%%%%%% Tagline at bottom\n{\\noindent The Publisher~~\\plogo}\\\\[\\baselineskip] % Publisher and logo\n\\end{minipage}\n\n\n\n\n\n\n\nI added some custom YAML variables because we need the title page background image and depending on how big that is, we need to move the title page up or down.\n\ntitlepage-geometry This specifies the margins for the geometry call used in the title page. Change the margins to move the title page around so it doesn’t overlap your background image. Default is whatever the other pages use (which depends on document class and whatever custom geometry you specified.)\ntitle-bg-location can be UL (upper left), UR (upper right), LR (lower right) or LL (lower left).\ntitle-bg-size how much of the page width is used by the background image. A number between 0 and 1. Default is 0.5.\n\nThe wallpaper LaTeX package is used to put the background image on the title page.\n\\This$title-bg-location$CornerWallPaper{$title-bg-size$}{$title-bg-image$}\n\n\nformat:\n  pdf:\n    documentclass: scrartcl\n    number-sections: true\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\n    toc: true\n    lof: true\n    lot: true\n    titlepage-geometry: \n      - top=3in\n      - bottom=1in\n      - right=1in\n      - left=1in\n    title-bg-image: \"images/corner-bg.png\"\n    title-bg-location: \"UL\"\n    title-bg-size: 0.5\nFor scrbook document class, the class options below will make the page margins the same on even and odd pages and allow chapters and parts to start on either even or odd pages. In addition, you will need to set number-sections: true because Quarto sets this to false and that causes equation numbering to fail. Look up how to turn off chapter and section numbers for the scrbook class if you want to do that.\n    documentclass: scrbook\n    classoption: [\"oneside\", \"open=any\"]\n    number-sections: true\n\n\n\nNothing special.\n$if(has-frontmatter)$\n  \\begin{frontmatter}\n  \\begin{titlepage}\n  $_titlepage.tex()$\n  \n  \\end{titlepage}\n  \\end{frontmatter}\n$else$\n  \\begin{titlepage}\n  $_titlepage.tex()$\n  \n  \\end{titlepage}\n$endif$\n\n  \n\n\n\n\n\n\nNothing special. I use babel to allow the Czech diacritics.\n\\usepackage{hyphenat}\n\\usepackage{graphicx}\n\\usepackage{wallpaper} % for the background image on title page\n\\usepackage{geometry}\n\\usepackage{babel}\n\\babelprovide[import,main]{czech}\n\n\n\n\n\n\n\n\n\n\n\n\nHere is where all the work is done.\n% This is a combination of Pandoc templating and LaTeX\n% Pandoc templating https://pandoc.org/MANUAL.html#templates\n% See the README for help\n\n$if(titlepage-geometry)$\n\\newgeometry{$for(titlepage-geometry)$$titlepage-geometry$$sep$,$endfor$}\n$endif$\n\\begin{minipage}[b][\\textheight][s]{\\textwidth}\n\\raggedright\n\n% background image\n$if(title-bg-image)$\n\\This$if(title-bg-location)$$title-bg-location$$else$UL$endif$CornerWallPaper{$if(title-bg-size)$$title-bg-size$$else$0.5$endif$}{$title-bg-image$}\n$endif$\n\n% Title and subtitle\n{\\huge\\bfseries\\nohyphens{$title$}}\\\\[1\\baselineskip] \n$if(subtitle)${\\large{$subtitle$}}\\\\[4\\baselineskip]$endif$\n    \n% Authors   \n% This hairy bit of code is just to get \"and\" between the last 2\n% authors. See below if you don't need that\n$if(by-author/allbutlast)$\n$for(by-author/allbutlast)$\n {\\large{$by-author.name.literal$}}$for(by-author.affiliations)${\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{*}}%\n$endif$%\n$sep$, \n$endfor$\n$for(by-author/last)$%\n{ and \\large{$by-author.name.literal$}}%\n$for(by-author.affiliations)${\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}%\n$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{*}}%\n$endif$%\n$endfor$\n$else$\n$for(by-author/last)$%\n{\\large{$by-author.name.literal$}}%\n$for(by-author.affiliations)$%\n{\\textsuperscript{$it.number$}}$sep$\\textsuperscript{,}$endfor$%\n$if(by-author.email)$%\n$if(by-author.affiliations)$\\textsuperscript{,}$endif$%\n{\\textsuperscript{,*}}%\n$endif$%\n$endfor$\n$endif$\n\n% This is how to do it if you don't need the \"and\"\n$if(false)$\n  $for(by-author)$\n    {$by-author.name.literal$}$for(by-author.affiliations)${\\textsuperscript{$it.number$}}$sep${\\textsuperscript{,}}$endfor$$if(by-author.email)$,{\\textsuperscript{*}}$endif$$sep$, \n$endfor$\n$endif$\n\n%%%%%% Affiliations\n\\vspace{2\\baselineskip} \n\n\\hangindent=1em\n\\hangafter=1\n$for(by-affiliation)$%\n{$it.number$}.~$if(by-affiliation.name)${$it.name$}$endif$%\n$if(by-affiliation.department)$%\n$if(by-affiliation.name)$, $endif$%\n{$it.department$}%\n$endif$%\n$if(by-affiliation.address)$%\n$if(by-affiliation.name)$, $else$$if(by-affiliation.department)$, $endif$$endif$%\n{$it.address$}%\n$endif$%\n$sep$\\par\\hangindent=1em\\hangafter=1%\n$endfor$\n\n%%%%%% Correspondence\n\\vspace{1\\baselineskip} \n\n$for(by-author)$\n$if(by-author.email)$\n* \\textit{Correspondence:}~$by-author.name.literal$~$by-author.email$\n$endif$\n$endfor$\n\n%use \\vfill instead to get the space to fill flexibly   \n%\\vspace{0.25\\textheight} % Whitespace between the title block and the publisher\n\n\\vfill\n\n%%%%%% Cover image\n$if(cover)$\\includegraphics[width=4cm]{$cover$}$endif$\n\n% Whitespace between the title block and the tagline\n\\vspace{1\\baselineskip} \n\n%%%%%% Tagline at bottom\nUniversity Technical Series\\newline\nOpen Source Publication for All\\newline\nAmtmandens Allé 15\\newline\n6950 Rindum Ringkøbing-Skjern\\newline\nDENMARK\\newline\nDecember 2025\n\n\\end{minipage}\n$if(titlepage-geometry)$\n\\restoregeometry\n$endif$"
  },
  {
    "objectID": "03-how-to-use.html",
    "href": "03-how-to-use.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "Go to https://github.com/nmfs-opensci/quarto_titlepages_v1\nOpen the titlepages folder\nPick a title page, eg. vline or bg-image\nDownload (or copy) all the .tex files. Typically this is the before-body.tex, _titlepage.tex, and in-header.tex files, but there may be more. How? Clone the repo or click on “raw” and copy and paste the code into your own file.\nYou can download (or copy) article.qmd to use as a template and so you know how the YAML is specified for the template you are using.\n\nIn the YAML of your qmd document or index.qmd file for a Quarto book project, add this to the PDF format section:\n\n\nAdding number-sections: true will number the chapters and sections. Remove if you don’t want that.\nformat:\n  pdf:\n    documentclass: scrartcl\n    number-sections: true\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\n\n\n\nThe class option “oneside” makes the margins of the even and odd pages the same. The class option “open=any” allows chapters and parts to start on even or odd pages; the default is to only start chapters and parts on odd pages. Note number-sections: false will not work with scrbook. That’s not the way to get rid of chapter numbers with the scrbook class.\nformat:\n  pdf:\n    documentclass: scrbook\n    classoption: [\"oneside\", \"open=any\"]\n    number-sections: true\n    template-partials:\n      - \"template/before-body.tex\"\n      - \"template/_titlepage.tex\" \n    include-in-header: \n      - \"template/in-header.tex\"\n\n\n\nYou can add a table of contents (toc: true), list of figures (lof: true) and list of tables (lot: true). The depth of the TOC is specified with toc-depth. Example:\nformat:\n  pdf:\n    documentclass: scrartcl\n    template-partials:\n      - \"before-body.tex\"\n      - \"_titlepage.tex\" \n    include-in-header: \n      - \"in-header.tex\"\n    toc: true\n    toc-depth: 3\n    lof: true\n    lot: true"
  },
  {
    "objectID": "01-about.html",
    "href": "01-about.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "This work is based on this section of the Quarto manual https://quarto.org/docs/journals/templates.html#replacing-partials To see the LaTeX templates that Quarto is using start here: https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/formats/pdf/pandoc/template.tex\nThis template makes a custom title page using the information in the YAML (from the xyz.qmd for an single doc and from index.qmd for a Quarto book). The default document classes in Quarto are scrbook and srcartcl, but these templates work for other document classes too. There are some other classes in the cls folder (krantz, svmono, elsevier). The static title pages are inspired from Latex Templates.\n\n\nThis is written assuming you are a LaTeX user and thus already know how to do what you want in LaTeX, but you need to figure out how to tell Quarto to do what you want. Skim the chapter on LaTeX document structure if you are unfamiliar with LaTeX so you know what I am talking about when I reference parts of a LaTeX document.\nQuarto has included a variety of YAML options you can use to alter your LaTeX document by passing in things like fontenc package options or geometry options in the YAML. I largely ignore all that and just pass in the header file I want. As a LaTeX user, I find all those YAML options confusing and I spend hours digging through the Quarto source code to figure out exactly how they are using the YAML options.\nThat said, for quarto_titlepages, I am mainly just swapping out the before-body.tex partial (the part that specs the title and front matter) and adding stuff to the header (before begin{document}).\n\n\n\nThere are 2 approaches that I considered.\n\nUse the title.tex partial (which defines things like title and author) and then redefine the \\maketitle command. Google and you’ll find examples. I find \\maketitle really irritating and is a constant headache to make custom title pages with it. But maybe you love it; in which case, try that approach.\nUse before-body.tex partial to get rid of the \\maketitle call and use my own \\begin{frontmatter}...\\end{frontmatter} section. I find this much more straightforward for creating custom titlepages. So that’s the approach I took.\n\n\n\n\nWhen recreating a government report title page, I don’t get to choose how the page looks. It has to look a very particular way. I find it easiest to just create that look manually rather than trying to figure out how to get the authblk LaTeX package to do what I want. authblk is a widely used LaTeX package which has helper functions for creating author lists along with affiliations.\nIf you use authblk in your titlepage, you will need to write your \\author and affil definitions in title.tex and then you can use those in before-body.tex in your \\begin{titlepage}...\\end{titlepage} code. See the LaTeX document structure page for tips.\n\n\n\nSee the notes chapter for some notes I took along the way."
  },
  {
    "objectID": "07-notes.html",
    "href": "07-notes.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "Some comments on my approach and why I did things the way I did.\n##\nIt is very common to use \\maketitle. When you customize a title page, you redefine this. I personnally find that approach more difficult than necessary. If I were writing a document class (cls), sure I’d use that but for of my work, I just find that more work than necessary.\nInstead I find it easier to include \\begin{titlepage}....\\end{titlepage} directly and not use \\maketitle at all. Background: within the documentclass (required for a LaTeX document), there will be a definitian of \\maketitle, a shortcut for a \\begin{title}....\\end{title} definition that specifies the look of the title page for that document class. Typically you’ll see this at the start of a LaTeX doc:\n\\begin{document}\n\\maketitle\nTo figure out what the \\maketitle code is, you have to dig into the document class. The document class is specified by a .cls file which you might not have access to. For example, the srcbook.cls document class used by Quarto is somewhere in the Quarto files. And in any case, document class files are hard to wade through. So instead one redefines \\maketitle in ones header (the part before \\begin{document}).\nBut for Quarto, the \\maketitle call is in the before-body.tex partial. So I can just pass in my own before-body.tex.\n\n\nThe authblk package (LaTeX) is very popular for defining the authors and affilliations for title pages. It has a lot of helper functions for defining \\author, which is a short-cut for a bunch of code to format an author list. If you look in the default title.tex partial, you see \\author being defined. That looks like the generic LaTeX \\author definition to me.\nIf we look at the title.tex template in the quarto journals bj template, it looks like they are using the authblk LaTeX package which has \\author[1] and \\affil like things.\nThe problem I have with using authblk, is that when recreating a government report title page, it’s not like I get to choose how the page looks. It has to look a very particular way. So I then need to learn how to alter the authblk defaults to get the author and affiliation looks that I need. Rather than fighting authblk to get what I want, I found it easier just to create the title page manually.\nOnce you have a handle on Pandoc template code, it is not hard to create things like\nauthor^1, author^1,2, author^3 and author^1\nusing a for loop in Pandoc. See the chapter on Pandoc templates."
  },
  {
    "objectID": "06-latex.html",
    "href": "06-latex.html",
    "title": "quarto titlepages v1",
    "section": "",
    "text": "For the purposes of quarto_titlepages, this is all you need to know.\n\\documentclass[<<<classoption>>>]{<<<document class>>>}\n\n<<<include-in-header static>>>\n\n<<<title.tex template>>>\n\n\\begin{document}\n\n<<<before-body.tex template>>>\n\nALL YOUR CONTENT\n\n\\end{document}\n\n\nThis specifies the look of your PDF. It is specified by a .cls file. Quarto uses by default scrartcl and scrbook. If you want to customize a document class, you can start with class options. You’ll need to dig into the CTAN documentation to see what is available: scrbook and srcartcl.\n    documentclass: scrbook\n    classoption: [\"oneside\", \"open=any\"]\n\n\n\nThis is static LaTeX. Static means it doesn’t using any variable from your YAML. It is just plain LaTeX. Headers on LaTeX documents are used to specify extra packages to use and define or redefine commands. It can get pretty complex. But quarto_title pages, we really don’t need much. I used the babel package for some diacritic (accents on letters) and the hyphenat package to stop titles from being hyphenated.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nquarto_titlepages does not use title.tex I include this section because defining authors using \\author{} is ubiquitous in LaTeX, so you should know a) what it is and b) what to do if you want to use it. Why doesn’t quarto_titlepages use it? Because the standard LaTeX title pages are nothing like the title pages I need for government reports. I would in a constant fight against the pre-defined \\author function or the authblk package functions if I used it.\n\n\nPandoc allows you to use a Pandoc template (meaning you can uses variables in your YAML). To that you can use title.tex. Despite the name, it is not restricted to using for the title. It is just that that is how Pandoc uses it.\ntitle\nYou might see title defined here like so.\n\\title{Here is the title.}\n\\title is a function and {..} is the argument for it. Later, after \\begin{document}, we can use \\title to output a title. The formating is defined in the \\title definition in the document class cls file.\nauthors\nIf you are going to use \\author or the authblk package to help you generate your author list on your title page, this is where you do that. Here is a really common \\author specification for a LaTeX document.\nExample from Pandoc title.tex\n\\author{$for(author)$$author$$sep$ \\and $endfor$}\nThe is going to put, for example, the following LaTeX in the document:\n\\author{Jane Doe \\and Ashok Kumar \\and Matti Meikäläinen}\nIt gets the names from author: in the YAML.\n\\author is essentially a function in LaTeX and the bit in {...} is the arguments. The document class (the cls file) has the code to process define the \\author function using those arguments (the names). Later, after \\begin{document}, we can use \\author to call the author function and it will output a formatted list of the author names.\nauthblk package\nWe also typically have author affiliations that we want to print. The authblk package helps with that.\nIt modifies the \\author function to have a number for the affiliation. So \\author[1]{author name 1} and has a \\affil[#]{affiliation} function to define the affiliation 1. So you would see something like this\n\\author[1]{Junli Liu}\n\\author[2]{James Rowe}\n\\author[3]{Keith Lindsey}\n\\affil[1]{address one}\n\\affil[2]{address two}\n\\affil[3]{address three}\n\n\n\nThis is where the command to make a title page is issued. Typically, you will see \\maketitle called. \\maketitle is a function defined in the document class cls file and specifies how the title page looks.\n\\begin{document}\n\n\\maketitle\n\nALL YOUR CONTENT\n\n\\end{document}\nBut we don’t have to use \\maketitle at all. We can define our own title page. This is the approach quarto_titlepages uses.\n\\begin{titlepage}\n\n<<< Code for your title page >>>\n\n\\end{titlepage}\nFor example, (the MWE from the base LaTeX installation):\n\\begin{titlepage}\n    \\centering\n    \\includegraphics[width=0.15\\textwidth]{example-image-1x1}\\par\\vspace{1cm}\n    {\\scshape\\Jacksonville State University \\par}\n    \\vspace{1cm}\n    {\\scshape\\Large Final year project\\par}\n    \\vspace{1.5cm}\n    {\\huge\\bfseries Pigeons love doves\\par}\n    \\vspace{2cm}\n    {\\Large\\itshape John Birdwatch\\par}\n    \\vfill\n    supervised by\\par\n    Dr.~Mark \\textsc{Brown}\n\n    \\vfill\n\n% Bottom of the page\n    {\\large \\today\\par}\n\\end{titlepage}\n\n\n\nIn a book document class, the title page is created using \\frontmatter (again that’s a function). If that is the case, you need to define the frontmatter otherwise the frontmatter (with title page) from the class definition will be used. So you have to use\n\\begin{frontmatter}\n\\begin{titlepage}\n<<< Code for our title page >>>\n\\end{titlepage}\n\\end{frontmatter}\n\n\n\n\nThe most common problem I have is that LaTeX wants a empty line feed (carriage return) at the end of my _titlepage.tex code. I often forget and then it complains that \\begin{titlepage} did not end."
  }
]